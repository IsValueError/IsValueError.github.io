<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Record of C</title>
    <link href="/2020/08/21/Record-of-C/"/>
    <url>/2020/08/21/Record-of-C/</url>
    
    <content type="html"><![CDATA[<h3 id="6-1-求自定类型元素序列的中位数"><a href="#6-1-求自定类型元素序列的中位数" class="headerlink" title="6-1 求自定类型元素序列的中位数"></a>6-1 求自定类型元素序列的中位数</h3><p>超时</p><p>搜了教程推荐用<strong>Shellsort</strong></p><h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序:"></a>插入排序:</h4><p><a href="https://www.cnblogs.com/lanhaicode/p/11259509.html" target="_blank" rel="noopener">https://www.cnblogs.com/lanhaicode/p/11259509.html</a></p><p>由后向前扫描 </p><p> in-place + 稳定</p><table><thead><tr><th></th><th>value</th></tr></thead><tbody><tr><td>最好时间复杂度</td><td>O(n)</td></tr><tr><td>最坏时间复杂度</td><td>O(n^2^)</td></tr><tr><td>空间复杂度</td><td>O(1)</td></tr></tbody></table><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printarr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *<span class="hljs-built_in">array</span>, <span class="hljs-keyword">int</span> len)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;    <span class="hljs-keyword">while</span>(i&lt;len)    &#123;        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d "</span>,*(<span class="hljs-built_in">array</span>+i));        i++;    &#125;    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;        <span class="hljs-keyword">int</span> <span class="hljs-built_in">array</span>[<span class="hljs-number">7</span>] = &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>&#125;;    <span class="hljs-keyword">int</span> length = <span class="hljs-keyword">sizeof</span>(<span class="hljs-built_in">array</span>)/<span class="hljs-keyword">sizeof</span>(<span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>]);    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"length : %d\n"</span>, length);    printarr(&amp;<span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>], length);    <span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i&lt;length ; i++)    &#123;        <span class="hljs-keyword">int</span> temp = <span class="hljs-built_in">array</span>[i];        <span class="hljs-keyword">for</span> (j = i<span class="hljs-number">-1</span>; j&gt;=<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">array</span>[j] &gt; temp ;j--)        &#123;           <span class="hljs-built_in">array</span>[j+<span class="hljs-number">1</span>] = <span class="hljs-built_in">array</span>[j];           <span class="hljs-comment">//array[j] = temp;  </span>        &#125;        <span class="hljs-built_in">array</span>[j+<span class="hljs-number">1</span>] = temp;        printarr(&amp;<span class="hljs-built_in">array</span>[<span class="hljs-number">0</span>], length);    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><p>小规模数据 / 基本有序</p><h4 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h4><p>简单插入排序的改进——缩小增量排序</p>]]></content>
    
    
    
    <tags>
      
      <tag>coding</tag>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/04/26/hello-world/"/>
    <url>/2020/04/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
